From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: KatanaMajesty <sasha.panasenk@gmail.com>
Date: Fri, 8 Jul 2022 18:08:50 +0300
Subject: [PATCH] Fix End platform regeneration deletes blocks

When a player goes through End Gate, obsidian End platform
is regenerated, deleting all blocks above. Patch allows to
avoid unwanted loss of valuable blocks, such as shulker blocks,
chests, ores, etc.

Tmp

diff --git a/src/main/java/com/katanamajesty/bloom/server/BloomConfig.java b/src/main/java/com/katanamajesty/bloom/server/BloomConfig.java
index 1642894eba5501a7e896e73f864f3e1e19c7021b..c9fb7e294db3d61124172fef405705ccc0debd42 100644
--- a/src/main/java/com/katanamajesty/bloom/server/BloomConfig.java
+++ b/src/main/java/com/katanamajesty/bloom/server/BloomConfig.java
@@ -102,6 +102,11 @@ public class BloomConfig {
         BloomConfig.timingsReallyEnabled = BloomConfig.getBoolean("timings.really-enabled", false);
     }
 
+    public static boolean safeEndPlatform;
+    private static void gameplay() {
+        BloomConfig.safeEndPlatform = BloomConfig.getBoolean("gameplay.safe-end-platform", true);
+    }
+
     public static boolean enableMessageSignatures;
     private static void signatures() {
         BloomConfig.enableMessageSignatures = BloomConfig.getBoolean("signatures.enable-message-signatures", false);
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 7e0d16fe31b297457d00d8269ffbf7910d410300..2f32ad4c8bc6dc0f2011e3c6d1491a012f7976f1 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -3,6 +3,7 @@ package net.minecraft.server.level;
 import com.google.common.annotations.VisibleForTesting;
 import co.aikar.timings.TimingHistory; // Paper
 import com.google.common.collect.Lists;
+import com.katanamajesty.bloom.server.BloomConfig;
 import com.mojang.datafixers.DataFixer;
 import com.mojang.datafixers.util.Pair;
 import com.mojang.logging.LogUtils;
@@ -110,10 +111,10 @@ import net.minecraft.world.level.Level;
 import net.minecraft.world.level.NaturalSpawner;
 import net.minecraft.world.level.StructureManager;
 import net.minecraft.world.level.WorldGenLevel;
+import net.minecraft.world.level.*;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.biome.BiomeSource;
-import net.minecraft.world.level.block.Block;
-import net.minecraft.world.level.block.Blocks;
+import net.minecraft.world.level.block.*;
 import net.minecraft.world.level.block.entity.TickingBlockEntity;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.chunk.ChunkAccess;
@@ -154,6 +155,7 @@ import net.minecraft.world.phys.shapes.BooleanOp;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
 import net.minecraft.world.ticks.LevelTicks;
+import org.jetbrains.annotations.NotNull;
 import org.slf4j.Logger;
 import org.bukkit.Bukkit;
 import org.bukkit.Location;
@@ -2410,6 +2412,14 @@ public class ServerLevel extends Level implements WorldGenLevel {
         ServerLevel.makeObsidianPlatform(world, null);
     }
 
+    // Bloom start
+    public static boolean isFiltered(@NotNull Block block) {
+        return (block instanceof BaseEntityBlock)
+            && !(block instanceof BrewingStandBlock)
+            && !(block instanceof AbstractBannerBlock)
+            && !(block instanceof SignBlock);
+    } // Bloom end - avoid deleting valuable blocks
+
     public static void makeObsidianPlatform(ServerLevel worldserver, Entity entity) {
         // CraftBukkit end
         BlockPos blockposition = ServerLevel.END_SPAWN_POINT;
@@ -2419,12 +2429,27 @@ public class ServerLevel extends Level implements WorldGenLevel {
 
         // CraftBukkit start
         org.bukkit.craftbukkit.util.BlockStateListPopulator blockList = new org.bukkit.craftbukkit.util.BlockStateListPopulator(worldserver);
-        BlockPos.betweenClosed(i - 2, j + 1, k - 2, i + 2, j + 3, k + 2).forEach((blockposition1) -> {
-            blockList.setBlock(blockposition1, Blocks.AIR.defaultBlockState(), 3);
-        });
-        BlockPos.betweenClosed(i - 2, j, k - 2, i + 2, j, k + 2).forEach((blockposition1) -> {
-            blockList.setBlock(blockposition1, Blocks.OBSIDIAN.defaultBlockState(), 3);
-        });
+
+        // Bloom start - safe platform regeneration
+        if (BloomConfig.safeEndPlatform) {
+            // Bloom start - prevent platform regeneration from deleting safe blocks
+            BlockPos.betweenClosed(i - 2, j + 1, k - 2, i + 2, j + 3, k + 2)
+                    .forEach(blockposition1 -> worldserver.destroyBlock(blockposition1, true)
+            ); // prevent platform regeneration from deleting valuable blocks, such as containers
+
+            com.google.common.collect.Streams.stream(BlockPos.betweenClosed(i - 2, j, k - 2, i + 2, j, k + 2))
+                    .filter(blockPos -> !isFiltered(blockList.getBlockState(blockPos).getBlock()))
+                    .forEach((blockposition1) -> blockList.setBlock(blockposition1, Blocks.OBSIDIAN.defaultBlockState(), 3)
+            ); // Bloom end - prevent platform regeneration from deleting safe blocks
+        } else {
+            BlockPos.betweenClosed(i - 2, j + 1, k - 2, i + 2, j + 3, k + 2).forEach((blockposition1) -> {
+                blockList.setBlock(blockposition1, Blocks.AIR.defaultBlockState(), 3);
+            });
+            BlockPos.betweenClosed(i - 2, j, k - 2, i + 2, j, k + 2).forEach((blockposition1) -> {
+                blockList.setBlock(blockposition1, Blocks.OBSIDIAN.defaultBlockState(), 3);
+            });
+        } // Bloom end - safe platform regeneration
+
         org.bukkit.World bworld = worldserver.getWorld();
         org.bukkit.event.world.PortalCreateEvent portalEvent = new org.bukkit.event.world.PortalCreateEvent((List<org.bukkit.block.BlockState>) (List) blockList.getList(), bworld, (entity == null) ? null : entity.getBukkitEntity(), org.bukkit.event.world.PortalCreateEvent.CreateReason.END_PLATFORM);
 
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 353463084d90eb684717e65c56da52cd25a1e375..2e54d98f350258fe84b1993af0b40e081a97c3c9 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -2,6 +2,7 @@ package net.minecraft.server.level;
 
 import com.destroystokyo.paper.event.entity.PlayerNaturallySpawnCreaturesEvent;
 import com.google.common.collect.Lists;
+import com.katanamajesty.bloom.server.BloomConfig;
 import com.mojang.authlib.GameProfile;
 import com.mojang.datafixers.util.Either;
 import com.mojang.logging.LogUtils;
@@ -1125,7 +1126,7 @@ public class ServerPlayer extends Player {
                 if (resourcekey == LevelStem.OVERWORLD && worldserver.getTypeKey() == LevelStem.NETHER) { // CraftBukkit
                     this.enteredNetherPosition = this.position();
                 } else if (worldserver.getTypeKey() == LevelStem.END && shapedetectorshape.portalEventInfo != null && shapedetectorshape.portalEventInfo.getCanCreatePortal()) { // CraftBukkit
-                    this.createEndPlatform(worldserver, new BlockPos(shapedetectorshape.pos));
+                    this.createEndPlatform(worldserver, new BlockPos(shapedetectorshape.pos.x, shapedetectorshape.pos.y + 1, shapedetectorshape.pos.z)); // Bloom fix platform coordinates
                 }
                 // CraftBukkit start
             } else {
@@ -1208,18 +1209,34 @@ public class ServerPlayer extends Player {
     // CraftBukkit end
 
     private void createEndPlatform(ServerLevel world, BlockPos centerPos) {
-        BlockPos.MutableBlockPos blockposition_mutableblockposition = centerPos.mutable();
-
+        // Bloom start - move end platform creation from ServerLevel
         org.bukkit.craftbukkit.util.BlockStateListPopulator blockList = new org.bukkit.craftbukkit.util.BlockStateListPopulator(world); // Paper
-        for (int i = -2; i <= 2; ++i) {
-            for (int j = -2; j <= 2; ++j) {
-                for (int k = -1; k < 3; ++k) {
-                    BlockState iblockdata = k == -1 ? Blocks.OBSIDIAN.defaultBlockState() : Blocks.AIR.defaultBlockState();
+        if (BloomConfig.safeEndPlatform) {
+            int i = centerPos.getX();
+            int j = centerPos.getY() - 2;
+            int k = centerPos.getZ();
+
+            BlockPos.betweenClosed(i - 2, j + 1, k - 2, i + 2, j + 3, k + 2)
+                    .forEach(blockposition1 -> world.destroyBlock(blockposition1, true)
+            );
+            com.google.common.collect.Streams.stream(BlockPos.betweenClosed(i - 2, j, k - 2, i + 2, j, k + 2))
+                    .filter(blockPos -> !ServerLevel.isFiltered(blockList.getBlockState(blockPos).getBlock()))
+                    .forEach((blockposition1) -> blockList.setBlock(blockposition1, Blocks.OBSIDIAN.defaultBlockState(), 3)
+            );
+        } else {
+            BlockPos.MutableBlockPos blockposition_mutableblockposition = centerPos.mutable();
 
-                    blockList.setBlock(blockposition_mutableblockposition.set(centerPos).move(j, k, i), iblockdata, 3); // Paper
+            for (int i = -2; i <= 2; ++i) {
+                for (int j = -2; j <= 2; ++j) {
+                    for (int k = 0; k < 4; ++k) { // Bloom
+                        BlockState iblockdata = k == 0 ? Blocks.OBSIDIAN.defaultBlockState() : Blocks.AIR.defaultBlockState(); // Bloom
+                        blockList.setBlock(blockposition_mutableblockposition.set(centerPos).move(j, k, i), iblockdata, 3); // Paper
+                    }
                 }
             }
         }
+        // Bloom end
+
         // Paper start
         if (new org.bukkit.event.world.PortalCreateEvent((List< org.bukkit.block.BlockState>) (List) blockList.getList(), world.getWorld(), this.getBukkitEntity(), org.bukkit.event.world.PortalCreateEvent.CreateReason.END_PLATFORM).callEvent()) {
             blockList.updateList();
