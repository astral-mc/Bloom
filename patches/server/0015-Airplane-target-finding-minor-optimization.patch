From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: KatanaMajesty <sasha.panasenk@gmail.com>
Date: Thu, 14 Jul 2022 20:13:54 +0300
Subject: [PATCH] Airplane target finding minor optimization


diff --git a/src/main/java/net/minecraft/world/entity/ai/targeting/TargetingConditions.java b/src/main/java/net/minecraft/world/entity/ai/targeting/TargetingConditions.java
index a7575b5ef56af6f53448d391abb4956e130148ca..cf985ebeb838526ae35c5b05b83b151484d35459 100644
--- a/src/main/java/net/minecraft/world/entity/ai/targeting/TargetingConditions.java
+++ b/src/main/java/net/minecraft/world/entity/ai/targeting/TargetingConditions.java
@@ -75,9 +75,18 @@ public class TargetingConditions {
                 }
 
                 if (this.range > 0.0D) {
-                    double d = this.testInvisible ? targetEntity.getVisibilityPercent(baseEntity) : 1.0D;
-                    double e = Math.max((this.useFollowRange ? this.getFollowRange(baseEntity) : this.range) * d, 2.0D); // Paper
+                    // Bloom start - check range before getting visibility (from Airplane)
+                    double followRangeRaw = this.useFollowRange ? this.getFollowRange(baseEntity) : this.range;
                     double f = baseEntity.distanceToSqr(targetEntity.getX(), targetEntity.getY(), targetEntity.getZ());
+
+                    // the actual follow range will always be this value or smaller, so if the distance is larger then it never will return true after getting invis
+                    if (f > followRangeRaw * followRangeRaw) {
+                        return false;
+                    }
+
+                    double d = this.testInvisible ? targetEntity.getVisibilityPercent(baseEntity) : 1.0D;
+                    double e = Math.max(followRangeRaw * d, MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET); // Paper // Bloom use constant
+                    // Bloom end
                     if (f > e * e) {
                         return false;
                     }
